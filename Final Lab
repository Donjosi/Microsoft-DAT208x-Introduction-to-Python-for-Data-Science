#Section 1: Importing and Summarizing Data

#Question 1

"""Read and explore your data
In this lab, you'll explore a dataset containing information on a university's recent 
graduates for each department. 
The URL this dataset can be downloaded from is stored in a variable called recent_grads_url. 
In this exercise, you'll read in this data using Python's pandas module."""


# Import pandas 
import pandas as pd

# Use pandas to read in recent_grads_url
recent_grads = pd.read_csv(recent_grads_url)

# Print the shape
print(recent_grads.shape)

#Question 2
""Exploring Your Data
Now you'll perform some data exploration using the Python pandas module. To get a sense of the data, 
you'll output statistics such as mean, median, count, and percentiles."""

# Print .dtypes
print(recent_grads.dtypes)

# Output summary statistics
print(recent_grads.describe())

# Exclude data of type object
print(recent_grads.describe(exclude=['object']))

#Replacing Missing Values Question 3


# Names of the columns we're searching for missing values 
columns = ['median', 'p25th', 'p75th']

# Take a look at the dtypes
print(recent_grads[columns].dtypes)

# Find how missing values are represented
print(recent_grads["median"].unique())

# Replace missing values with NaN
for column in columns:
    recent_grads.loc[recent_grads[column] == 'UN', column] = np.nan
    
    
 #Question 4  
 #Select a column and print first 5 rows
    # Select sharewomen column
sw_col = recent_grads['sharewomen']

# Output first five rows
print(sw_col.iloc[:5])


# Question 5

# Import numpy
import numpy as np

# Use max to output maximum values
max_sw = np.max(sw_col)

# Print column max
print(max_sw)


# Question 6
# Output the row containing the maximum percentage of women
print(recent_grads[sw_col == max_sw])

# Question 7
# Convert to numpy array
recent_grads_np = np.array(recent_grads[['unemployed', 'low_wage_jobs']])


# Print the type of recent_grads_np
print(type(recent_grads_np))

#Question 8

# Calculate correlation matrix
print(np.corrcoef(recent_grads_np[:,0], recent_grads_np[:,1]))


#Section 2: Manipulating Data
# Question 1
# Add sharemen column
recent_grads['sharemen'] = recent_grads['men'] / recent_grads['total']

#Question 2

# Find the maximum percentage value of men
max_men = np.array(recent_grads['sharemen'].max())
 
# Output the row with the highest percentage of men
print(recent_grads[recent_grads['sharemen'] == max_men])

#Question 3
# Add gender_diff column
recent_grads['gender_diff'] = recent_grads['sharewomen'] - recent_grads['sharemen']

#Question 4
# Make all gender difference values positive
recent_grads['gender_diff'] = np.abs (recent_grads['gender_diff'])

# Find the 5 rows with lowest gender rate difference
print(recent_grads.nsmallest(5, 'gender_diff'))

# Question 5
# Rows where gender rate difference is greater than .30 
diff_30 = recent_grads['gender_diff'] > .30

# Rows with more men
more_men = recent_grads['sharemen'] > recent_grads['sharewomen']

# Combine more_men and diff_30
more_men_and_diff_30 = np.logical_and(more_men, diff_30)

# Find rows with more men and and gender rate difference greater than .30
fewer_women = recent_grads[more_men_and_diff_30]

#Question 6
# Group by major category and count
print(recent_grads.groupby(['major_category']).major_category.count())

#Question 7

# Group departments that have less women by category and count
print(fewer_women.groupby(['major_category']).major_category.count())

#Question 8
# Report average gender difference by major category
print(recent_grads.groupby(['major_category']).gender_diff.mean())

#Question 9

# Find average number of low wage jobs and unemployment rate of each major category
dept_stats = recent_grads.groupby(['major_category'])['low_wage_jobs', 'unemployment_rate'].mean()
print(dept_stats)


#Section 3: Visualizing Data
#Question 1
# Import matplotlib
import matplotlib.pyplot as plt

# Create scatter plot
plt.scatter(x=dept_stats["unemployment_rate"], y=dept_stats["low_wage_jobs"])

# Label x axis
plt.xlabel('Unemployment rate')

# Label y axis
plt.ylabel('Low pay jobs')

# Display the graph 
plt.show()

#Question 2
# Plot the red and triangle shaped scatter plot  
plt.scatter(x=dept_stats['unemployment_rate'],y=dept_stats['low_wage_jobs'], color="r", marker="^")

# Display the visualization
plt.show()

#Question 3

# Plot a histogram of sharewomen
plt.hist(recent_grads['sharewomen'])

# Show the plot
plt.show()

#Question 4
# Import matplotlib and pandas
import matplotlib.pyplot as plt
import pandas as pd

# Create scatter plot
dept_stats.plot(kind='scatter', x='unemployment_rate', y='low_wage_jobs')
plt.show()

# Create histogram
recent_grads.sharewomen.plot(kind='hist')
plt.show()

Question 5


